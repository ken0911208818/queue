// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/golang-queue/queue/core (interfaces: QueuedMessage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockQueuedMessage is a mock of QueuedMessage interface.
type MockQueuedMessage struct {
	ctrl     *gomock.Controller
	recorder *MockQueuedMessageMockRecorder
}

// MockQueuedMessageMockRecorder is the mock recorder for MockQueuedMessage.
type MockQueuedMessageMockRecorder struct {
	mock *MockQueuedMessage
}

// NewMockQueuedMessage creates a new mock instance.
func NewMockQueuedMessage(ctrl *gomock.Controller) *MockQueuedMessage {
	mock := &MockQueuedMessage{ctrl: ctrl}
	mock.recorder = &MockQueuedMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQueuedMessage) EXPECT() *MockQueuedMessageMockRecorder {
	return m.recorder
}

// Bytes mocks base method.
func (m *MockQueuedMessage) Bytes() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bytes")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Bytes indicates an expected call of Bytes.
func (mr *MockQueuedMessageMockRecorder) Bytes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bytes", reflect.TypeOf((*MockQueuedMessage)(nil).Bytes))
}
